AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: MCP-compliant server using HTTP in Lambda

Parameters:
  McpAuthToken:
    Type: String
    NoEcho: true
    Description: "The authentication token for MCP"

Globals:
  Function:
    Timeout: 60
    Runtime: python3.12
    Architectures: [x86_64]

Resources:
  McpApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        Authorizers:
          TokenAuthorizer:
            FunctionArn: !GetAtt McpAuthorizerFunction.Arn
            FunctionPayloadType: TOKEN
            Identity:
              ReauthorizeEvery: 300
              Header: Authorization

  McpAuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      CodeUri: authorizer/
      Environment:
        Variables:
          MCP_AUTH_TOKEN: !Ref McpAuthToken
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 'lambda:InvokeFunction'
              Resource: '*'

  McpSessionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-mcp-sessions"
      AttributeDefinitions:
        - AttributeName: session_id
          AttributeType: S
      KeySchema:
        - AttributeName: session_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      TimeToLiveSpecification:
        AttributeName: expires_at
        Enabled: true
      Tags:
        - Key: Purpose
          Value: MCP Session Management

  McpCharactersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: mcp-characters
      AttributeDefinitions:
        - AttributeName: character_id
          AttributeType: S
      KeySchema:
        - AttributeName: character_id
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      Tags:
        - Key: Purpose
          Value: MCP Character Storage

  McpServerFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.lambda_handler
      CodeUri: server/
      Environment:
        Variables:
          MCP_SESSION_TABLE: !Ref McpSessionsTable
          BEDROCK_AGENT_ID: "BEDROCK_AGENT_ID"
          BEDROCK_AGENT_ALIAS_ID: "BEDROCK_AGENT_ALIAS_ID"
          BEDROCK_REGION: "us-east-1"
          CHARACTER_TABLE: !Ref McpCharactersTable
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - s3:ListBuckets
                - s3:ListAllMyBuckets
              Resource: '*'
            - Effect: Allow
              Action:
                - dynamodb:CreateTable
                - dynamodb:DeleteItem
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DescribeTable
              Resource: !GetAtt McpSessionsTable.Arn
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:Scan
                - dynamodb:Query
                - dynamodb:DescribeTable
              Resource: !GetAtt McpCharactersTable.Arn
        - Statement:
            - Effect: Allow
              Action: bedrock:InvokeAgent
              Resource: arn:aws:bedrock:us-east-1:503606331109:agent-alias/LVEURHFJE8/ZMMYRFTV0V
      Events:
        McpAPI:
          Type: Api
          Properties:
            Path: /mcp
            Method: ANY
            RestApiId: !Ref McpApi
            Auth:
              Authorizer: TokenAuthorizer

Outputs:
  MCPServerApi:
    Description: "API Gateway endpoint URL for MCP server"
    Value: !Sub "https://${McpApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/mcp"
  McpSessionsTableName:
    Description: "Name of the DynamoDB table for MCP sessions"
    Value: !Ref McpSessionsTable
